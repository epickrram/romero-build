<?xml version="1.0" encoding="UTF-8"?>

<project name="romero" basedir="." default="all">

    <property name="build.dir" value="build"/>
    <property name="main.classes.dir" value="build/main/classes"/>
    <property name="dist.dir" value="build/dist"/>
    <property name="test-classes.dir" value="build/test/classes"/>
    <property name="test-output.dir" value="build/test/output"/>
    <property name="test.report.dir" value="${test-output.dir}/report/junit"/>
    <property name="main.src.dir" value="src/main/java"/>
    <property name="main.web.dir" value="src/main/web"/>
    <property name="main.resources.dir" value="src/main/resources"/>
    <property name="test.src.dir" value="src/test/java"/>
    <property name="test.resources.dir" value="src/test/resources"/>
    <property name="release.dir" value="build/release"/>
    <property name="majorVersion" value="0"/>
    <property name="minorVersion" value="1"/>

    <path id="dist.class.path">
        <fileset dir="lib/dist">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="build.class.path">
        <fileset dir="lib/build">
            <include name="*.jar"/>
        </fileset>
        <path refid="dist.class.path"/>
    </path>

    <path id="test-class.class.path">
        <path refid="dist.class.path"/>
        <path refid="build.class.path"/>
    </path>

    <path id="test.class.path">
        <path refid="dist.class.path"/>
        <path refid="build.class.path"/>
        <path refid="test-class.class.path"/>
        <path location="${main.classes.dir}"/>
        <path location="${test-classes.dir}"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile" depends="clean">
        <mkdir dir="${main.classes.dir}"/>
        <javac destdir="${main.classes.dir}" srcdir="${main.src.dir}" target="7" source="7" debug="true"
               debuglevel="lines,vars,source">
            <classpath refid="build.class.path"/>
        </javac>
    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${test-classes.dir}"/>
        <javac destdir="${test-classes.dir}" srcdir="${test.src.dir}" target="7" source="7" debug="true"
               debuglevel="lines,vars,source">
            <classpath refid="test.class.path"/>
        </javac>
    </target>

    <target name="test" depends="compile-test">
        <mkdir dir="${test-output.dir}"/>
        <mkdir dir="${test.report.dir}/xml"/>
        <mkdir dir="${test.report.dir}/html"/>

        <junit printsummary="yes" haltonfailure="no" failureproperty="test.failure">
            <classpath>
                <path refid="test.class.path"/>
            </classpath>

            <batchtest fork="yes" todir="${test.report.dir}/xml">
                <fileset dir="${test.src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>

                <formatter type="xml"/>
            </batchtest>
        </junit>

        <junitreport todir="${test.report.dir}">
            <fileset dir="${test.report.dir}/xml">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${test.report.dir}/html"
                    format="frames">
            </report>
        </junitreport>

        <fail if="${test.failure}" message="Unit tests failed"/>
    </target>

    <target name="war" depends="compile">
        <mkdir dir="${dist.dir}/web"/>
        <copy todir="${dist.dir}/web">
            <fileset dir="${main.web.dir}" includes="**/*"/>
        </copy>
        <mkdir dir="${dist.dir}/web/WEB-INF/classes"/>
        <copy todir="${dist.dir}/web/WEB-INF/classes">
            <fileset dir="${main.classes.dir}">
                <include name="com/epickrram/romero/common/**/*"/>
                <include name="com/epickrram/romero/core/**/*"/>
                <include name="com/epickrram/romero/server/**/*"/>
                <include name="com/epickrram/romero/util/**/*"/>
            </fileset>
        </copy>

        <mkdir dir="${dist.dir}/web/WEB-INF/lib"/>
        <copy todir="${dist.dir}/web/WEB-INF/lib">
            <fileset dir="lib/dist">
                <include name="*.jar"/>
                <exclude name="*sources*.jar"/>
            </fileset>
        </copy>

        <jar destfile="${dist.dir}/romero.war">
            <fileset dir="${dist.dir}/web">
                <include name="**/*"/>
            </fileset>
        </jar>
    </target>

    <target name="start-test-server" depends="compile-test">
        <property file="${test.resources.dir}/integration-test.properties"/>
        <exec executable="sh" dir="./bin">
            <arg value="./start-test-server.sh"/>
            <arg value="${romero.server.port}"/>
            <arg value="${test.resources.port}"/>
        </exec>
    </target>

    <target name="stop-test-server">
        <exec executable="pkill" dir=".">
            <arg value="-f"/>
            <arg value="WebAppRunner"/>
        </exec>
    </target>

    <!--<target name="jar" depends="compile">-->
    <!--<jar destfile="${dist.dir}/romero-${majorVersion}.${minorVersion}.jar"-->
    <!--basedir="${dist.dir}/classes" manifest="manifest/MANIFEST.MF"/>-->
    <!--</target>-->

    <!--<target name="dist" depends="jar">-->
    <!--<delete dir="${release.dir}"/>-->
    <!--<mkdir dir="${release.dir}"/>-->
    <!--<copy todir="${release.dir}">-->
    <!--<fileset dir="${dist.dir}" includes="romero-${majorVersion}.${minorVersion}.jar"/>-->
    <!--</copy>-->

    <!--<mkdir dir="${release.dir}/lib"/>-->
    <!--<copy todir="${release.dir}/lib">-->
    <!--<fileset dir="lib/dist">-->
    <!--<include name="*.jar"/>-->
    <!--</fileset>-->
    <!--</copy>-->

    <!--<zip zipfile="${dist.dir}/romero-${majorVersion}.${minorVersion}.zip">-->
    <!--<fileset dir="${release.dir}" includes="**/*"/>-->
    <!--</zip>-->
    <!--</target>-->

    <target name="all" depends="test"/>

</project>
	
